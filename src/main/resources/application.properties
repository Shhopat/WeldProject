spring.application.name=WeldProject

server.port=8080
server.servlet.context-path=/

#Конфигурация БД
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/weld_project?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1297

#Конфигурация hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

#Добавляем hidden фильтр работы HTTP методов PUT PATCH DELETE
spring.mvc.hiddenmethod.filter.enabled=true
logging.level.org.springframework.security=DEBUG
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


# Уровень логирования
logging.level.root=DEBUG

# Логирование Spring Boot
logging.level.org.springframework=DEBUG

# Логирование Hibernate
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql=ERROR

# Вывод логов в консоль с цветами (если поддерживается терминалом)
spring.output.ansi.enabled=ALWAYS

# Формат логов (необязательно)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Адрес Kafka
spring.kafka.bootstrap-servers=broker1:9092,broker2:9092,broker3:9092
#Связали с нескольким брокерами

# Сериализация продюсера
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#События передаются как key:value, а тут мы выберем тип

# Десериализация консьюмера
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#Так же определяем тип

# Группа консьюмера
spring.kafka.consumer.group-id=my-group




